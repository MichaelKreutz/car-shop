buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
        dockerComposePluginVersion = '0.8.8'
	}
	repositories {
        jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.avast.gradle:gradle-docker-compose-plugin:${dockerComposePluginVersion}")
//		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

plugins {
    id 'com.palantir.docker' version '0.20.1'
}



apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker-compose'
apply plugin: 'com.palantir.docker'

group = 'de.kreutz.michael'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('io.springfox:springfox-swagger2:2.9.1')
    implementation('io.springfox:springfox-swagger-ui:2.9.1')

    compileOnly('org.projectlombok:lombok:1.18.2')
	implementation('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.github.benas:random-beans-randomizers:3.7.0')
}

dockerCompose.isRequiredBy(test)

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree("build/libs/${bootJar.archiveName}"))
	into("build/dependency")
}
docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}
